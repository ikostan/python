---
name: "Pylint Workflow"

on:
  # Makes it reusable; called by other workflows
  workflow_call:
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.pylintrc'

jobs:
  build:
    runs-on: "ubuntu-latest"
    # Adding 'timeout-minutes: 10' would prevent jobs from running
    # indefinitely if something goes wrong
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: "actions/checkout@v5"
    - name: Set up Python ${{ matrix.python-version }}
      uses: "actions/setup-python@v6"
      with:
        python-version: ${{ matrix.python-version }}
    - name: "Cache PIP Dependencies"
      uses: "actions/cache@v4"
      with:
        path: ~/.cache/pip
        key: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
    - name: "Install dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: "Analysing the code with pylint"
      run: |
        python -m pylint --verbose $(find . -name "*.py" ! -path "*/.venv/*" ! -path "*/venv/*") --rcfile=.pylintrc